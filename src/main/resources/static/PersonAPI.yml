---
openapi: 3.0.0
info:
  title: Person API
  description: This is the Swagger specification of the person management API
  contact:
    email: y.buryburymski@gmail.com
  license:
    name: MIT License
    url: https://github.com/yurybury/PersonAPI/blob/main/LICENSE
  version: 2.1.0
servers:
- url: http://localhost:9090
tags:
- name: person
  description: Person business objects and operations
paths:
  /person:
    get:
      tags:
      - person
      summary: Gets all persons
      description: This operation gets all persons
      operationId: getPersons
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - person
      summary: Adds the person to the person management system
      description: Adds the person to the person management system
      operationId: addPerson
      requestBody:
        description: Person to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person_Add'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: an Person already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /person/{id}:
    get:
      tags:
      - person
      summary: Gets the person with the specified ID
      description: This operation gets the person entity with the specified ID.
      operationId: getPerson
      parameters:
      - name: id
        in: path
        description: Identifier of the person
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - person
      summary: Updates the person with the specified ID
      description: This operation updates the person entity with the specified ID and provided updated person data
      operationId: updatePerson
      parameters:
      - name: id
        in: path
        description: Identifier of the person
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated person data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person_Update'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - person
      summary: Deletes the person
      description: This operation deletes the person entity.
      operationId: deletePerson
      parameters:
      - name: id
        in: path
        description: Identifier of the person
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Person:
      required:
      - eMailAddress
      - familyName
      - givenName
      type: object
      allOf:
      - $ref: '#/components/schemas/Person_Inv'
      - $ref: '#/components/schemas/Person_Base'
    Person_Add:
      required:
      - eMailAddress
      - familyName
      - givenName
      - nickname
      type: object
      allOf:
      - $ref: '#/components/schemas/Person_Base'
    Person_Update:
      type: object
      allOf:
      - $ref: '#/components/schemas/Person_Base'
    Person_Inv:
      required:
      - creationDate
      - href
      - id
      - lastUpdate
      - status
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        status:
          type: string
          description: The current status of Person on this position
          example: Active
        creationDate:
          type: string
          description: Date and time of the person creation (timestamp)
          format: date-time
        lastUpdate:
          type: string
          description: Date and time of the person last update (timestamp)
          format: date-time
        fromDate:
          type: string
          description: Effective from date and time of the person history record (timestamp)
          format: date-time
        toDate:
          type: string
          description: Effective to date and time of the person history record (timestamp)
          format: date-time
    Person_Base:
      type: object
      properties:
        namePrefix:
          type: string
          description: Name prefix, f.e. Mrs., Mr., etc.
        givenName:
          type: string
          description: Given name or the first name
        middleName:
          type: string
          description: Middle name
        familyName:
          type: string
          description: Family name or surname, the second name
        nickname:
          type: string
          description: Nickname associated to this person
        gender:
          type: string
          description: Gender
        eMailAddress:
          type: string
          description: e-mail address
          example: emp@comp.com
        workPhone:
          type: string
          description: Work phone number
          example: +43-664-663-0002
        privatePhone:
          type: string
          description: Private phone number
          example: +43-664-663-0002
        webHomePage:
          type: string
          description: Private web site
          format: url
          example: https://abc
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client person.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
